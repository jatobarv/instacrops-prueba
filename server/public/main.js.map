{"version":3,"sources":["./src/app/home/items.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ItemsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async getItems() {\r\n    return this.http.get('https://instacrops-test.herokuapp.com/items/');\r\n  }\r\n\r\n  async getItemById(itemId: string) {\r\n    return this.http.get(\r\n      'https://instacrops-test.herokuapp.com/items/' + itemId\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { ItemsService } from './items.service';\nimport {\n  NgbModalConfig,\n  NgbModal,\n  ModalDismissReasons,\n} from '@ng-bootstrap/ng-bootstrap';\ninterface ItemI {\n  id: number;\n  name: string;\n  user_id: number;\n}\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  providers: [NgbModalConfig, NgbModal],\n})\nexport class HomeComponent implements OnInit {\n  @Output() showItem = new EventEmitter();\n  username: string | null | undefined = localStorage.getItem('user');\n  items: any;\n  closeResult = '';\n  selectedItem!: ItemI;\n\n  constructor(\n    public authService: AuthService,\n    public itemsService: ItemsService,\n    private modalService: NgbModal\n  ) {}\n\n  ngOnInit(): void {\n    this.getItems();\n  }\n\n  async getItems() {\n    await (await this.itemsService.getItems()).subscribe(\n      (items) => {\n        this.items = items;\n        console.log(this.items);\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  logout() {\n    this.authService.logout();\n    window.location.reload();\n  }\n\n  async open(content: any, itemId: string) {\n    (await this.itemsService.getItemById(itemId)).subscribe((item: any) => {\n      this.selectedItem = item;\n      console.log(this.selectedItem);\n\n      this.modalService\n        .open(content, { ariaLabelledBy: 'modal-basic-title' })\n        .result.then(\n          (result) => {\n            this.closeResult = `Cerrado con: ${result}`;\n          },\n          (reason) => {\n            this.closeResult = `Cerrado por ${this.getDismissReason(reason)}`;\n          }\n        );\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'presionar ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'presionar fuera de modal';\n    } else {\n      return `${reason}`;\n    }\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">Instacrops</a>\n\n  <div class=\"collapse navbar-collapse ml-auto\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\">{{ username }}</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"logout()\" style=\"cursor: 'pointer'\"\n          >Logout</a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<div class=\"d-flex align-content-start flex-wrap justify-content-center m-4\">\n  <div\n    class=\"card m-2\"\n    style=\"width: 18rem\"\n    *ngFor=\"let item of items; index as i\"\n  >\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{ item.name }}</h5>\n      <p class=\"card-text\">\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis,\n        aliquam.\n      </p>\n    </div>\n    <button\n      class=\"btn btn-lg btn-outline-primary mx-auto mb-3\"\n      (click)=\"open(content, item.id)\"\n    >\n      Ver item\n    </button>\n  </div>\n</div>\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">\n      Item ID: {{ selectedItem.id }}\n    </h4>\n    <button\n      type=\"button\"\n      class=\"close\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss('Click equis')\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"media\">\n      <img\n        class=\"mr-3\"\n        src=\"http://semantic-ui.com/images/wireframe/image.png\"\n        alt=\"Generic placeholder image\"\n        style=\"width: 125px\"\n      />\n      <div class=\"media-body\">\n        <h5>Nombre: {{ selectedItem.name }}</h5>\n        <h5>ID de usuario: {{ selectedItem.user_id }}</h5>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Rerum,\n        exercitationem?\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-primary\"\n      (click)=\"modal.close('Botón cerrar')\"\n    >\n      Cerrar\n    </button>\n  </div>\n</ng-template>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div *ngIf=\"!isSignedIn\" class=\"container\">\n  <div class=\"d-flex p-2\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"username\">Nombre de usuario</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"username\"\n          placeholder=\"Nombre de usuario\"\n          #email\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Contraseña</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"password\"\n          placeholder=\"Contraseña\"\n          #password\n        />\n      </div>\n      <button\n        class=\"btn btn-primary\"\n        type=\"button\"\n        (click)=\"onSignIn(email.value + '@a.com', password.value)\"\n      >\n        Ingresar\n      </button>\n    </form>\n  </div>\n</div>\n\n<!-- <div *ngIf=\"!isSignedIn\" class=\"signIn\">\n  <h2>Sign in</h2>\n  <input type=\"text\" #email />\n  <input type=\"password\" #password />\n  <button (click)=\"onSignIn(email.value + '@a.com', password.value)\">\n    sign in\n  </button>\n</div> -->\n\n<app-home *ngIf=\"isSignedIn\" (isLogout)=\"handleLogOut()\"></app-home>\n","import { Component, Input } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'instacrops';\n  isSignedIn: boolean = false;\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    if (localStorage.getItem('token') !== null) {\n      this.isSignedIn = true;\n    } else this.isSignedIn = false;\n  }\n\n  async onSignIn(email: string, password: string) {\n    (await this.authService.signin(email, password)).subscribe(\n      (user: any) => {\n        this.isSignedIn = true;\n        localStorage.setItem('token', user.idToken);\n        localStorage.setItem('user', user.email.split('@')[0]);\n      },\n      (error) => {\n        if (error.status === 401) {\n          alert(error.error.message);\n        }\n      }\n    );\n  }\n\n  handleLogOut() {\n    this.isSignedIn = false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AngularFireModule } from '@angular/fire';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthService } from './services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, NgbModule],\n  exports: [HomeComponent],\n  providers: [AuthService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  isLoggedIn: boolean = true;\n  constructor(private http: HttpClient) {}\n\n  async signin(email: string, password: string) {\n    return this.http.post('https://instacrops-test.herokuapp.com/login/', {\n      email: email,\n      password: password,\n    });\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return this.http.get('https://instacrops-test.herokuapp.com/logout/');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}